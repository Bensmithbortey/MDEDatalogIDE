/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mde.ui.quickfix;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.model.edit.IMultiModification;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.xtext.mde.datalog.Assertion;
import org.xtext.mde.datalog.Atom;
import org.xtext.mde.datalog.Conditions;
import org.xtext.mde.validation.DatalogValidator;

/**
 * Custom quickfixes.
 * 
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
@SuppressWarnings("all")
public class DatalogQuickfixProvider extends DefaultQuickfixProvider {
  @Fix(DatalogValidator.INVALID_CONDITION)
  public void lowerNameCondition(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IMultiModification<EObject> _function = (EObject element) -> {
      final Conditions decl = ((Conditions) element);
      Atom _cond = decl.getCond();
      _cond.setName(StringExtensions.toFirstLower(decl.getCond().getName()));
    };
    acceptor.<EObject>acceptMulti(issue, "First lowercase character", "Make the first character lowercase.", null, _function);
  }
  
  @Fix(DatalogValidator.INVALID_ASSERTION)
  public void lowerNameAssertion(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IMultiModification<EObject> _function = (EObject element) -> {
      final Assertion decl = ((Assertion) element);
      Atom _truth = decl.getTruth();
      _truth.setName(StringExtensions.toFirstLower(decl.getTruth().getName()));
    };
    acceptor.<EObject>acceptMulti(issue, "First lowercase character", "Make the first character lowercase.", null, _function);
  }
}
