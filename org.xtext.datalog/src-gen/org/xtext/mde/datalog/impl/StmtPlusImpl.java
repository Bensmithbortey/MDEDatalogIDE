/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mde.datalog.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.mde.datalog.DatalogPackage;
import org.xtext.mde.datalog.Statements;
import org.xtext.mde.datalog.StmtPlus;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stmt Plus</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtPlusImpl#getPlus <em>Plus</em>}</li>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtPlusImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtPlusImpl#getRightPlus <em>Right Plus</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StmtPlusImpl extends MinimalEObjectImpl.Container implements StmtPlus
{
  /**
   * The default value of the '{@link #getPlus() <em>Plus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlus()
   * @generated
   * @ordered
   */
  protected static final String PLUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPlus() <em>Plus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlus()
   * @generated
   * @ordered
   */
  protected String plus = PLUS_EDEFAULT;

  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected StmtPlus left;

  /**
   * The cached value of the '{@link #getRightPlus() <em>Right Plus</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightPlus()
   * @generated
   * @ordered
   */
  protected Statements rightPlus;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StmtPlusImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatalogPackage.Literals.STMT_PLUS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPlus()
  {
    return plus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPlus(String newPlus)
  {
    String oldPlus = plus;
    plus = newPlus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_PLUS__PLUS, oldPlus, plus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StmtPlus getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(StmtPlus newLeft, NotificationChain msgs)
  {
    StmtPlus oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_PLUS__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeft(StmtPlus newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_PLUS__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_PLUS__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_PLUS__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Statements getRightPlus()
  {
    return rightPlus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightPlus(Statements newRightPlus, NotificationChain msgs)
  {
    Statements oldRightPlus = rightPlus;
    rightPlus = newRightPlus;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_PLUS__RIGHT_PLUS, oldRightPlus, newRightPlus);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightPlus(Statements newRightPlus)
  {
    if (newRightPlus != rightPlus)
    {
      NotificationChain msgs = null;
      if (rightPlus != null)
        msgs = ((InternalEObject)rightPlus).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_PLUS__RIGHT_PLUS, null, msgs);
      if (newRightPlus != null)
        msgs = ((InternalEObject)newRightPlus).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_PLUS__RIGHT_PLUS, null, msgs);
      msgs = basicSetRightPlus(newRightPlus, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_PLUS__RIGHT_PLUS, newRightPlus, newRightPlus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_PLUS__LEFT:
        return basicSetLeft(null, msgs);
      case DatalogPackage.STMT_PLUS__RIGHT_PLUS:
        return basicSetRightPlus(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_PLUS__PLUS:
        return getPlus();
      case DatalogPackage.STMT_PLUS__LEFT:
        return getLeft();
      case DatalogPackage.STMT_PLUS__RIGHT_PLUS:
        return getRightPlus();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_PLUS__PLUS:
        setPlus((String)newValue);
        return;
      case DatalogPackage.STMT_PLUS__LEFT:
        setLeft((StmtPlus)newValue);
        return;
      case DatalogPackage.STMT_PLUS__RIGHT_PLUS:
        setRightPlus((Statements)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_PLUS__PLUS:
        setPlus(PLUS_EDEFAULT);
        return;
      case DatalogPackage.STMT_PLUS__LEFT:
        setLeft((StmtPlus)null);
        return;
      case DatalogPackage.STMT_PLUS__RIGHT_PLUS:
        setRightPlus((Statements)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_PLUS__PLUS:
        return PLUS_EDEFAULT == null ? plus != null : !PLUS_EDEFAULT.equals(plus);
      case DatalogPackage.STMT_PLUS__LEFT:
        return left != null;
      case DatalogPackage.STMT_PLUS__RIGHT_PLUS:
        return rightPlus != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (plus: ");
    result.append(plus);
    result.append(')');
    return result.toString();
  }

} //StmtPlusImpl
