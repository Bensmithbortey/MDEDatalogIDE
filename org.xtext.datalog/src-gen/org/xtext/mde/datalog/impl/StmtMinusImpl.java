/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mde.datalog.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.mde.datalog.AssertionMinus;
import org.xtext.mde.datalog.DatalogPackage;
import org.xtext.mde.datalog.StmtMinus;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stmt Minus</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtMinusImpl#getMinus <em>Minus</em>}</li>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtMinusImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.mde.datalog.impl.StmtMinusImpl#getRightMinus <em>Right Minus</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StmtMinusImpl extends MinimalEObjectImpl.Container implements StmtMinus
{
  /**
   * The default value of the '{@link #getMinus() <em>Minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinus()
   * @generated
   * @ordered
   */
  protected static final String MINUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinus() <em>Minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinus()
   * @generated
   * @ordered
   */
  protected String minus = MINUS_EDEFAULT;

  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected StmtMinus left;

  /**
   * The cached value of the '{@link #getRightMinus() <em>Right Minus</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightMinus()
   * @generated
   * @ordered
   */
  protected AssertionMinus rightMinus;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StmtMinusImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatalogPackage.Literals.STMT_MINUS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMinus()
  {
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinus(String newMinus)
  {
    String oldMinus = minus;
    minus = newMinus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_MINUS__MINUS, oldMinus, minus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StmtMinus getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(StmtMinus newLeft, NotificationChain msgs)
  {
    StmtMinus oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_MINUS__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeft(StmtMinus newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_MINUS__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_MINUS__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_MINUS__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssertionMinus getRightMinus()
  {
    return rightMinus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightMinus(AssertionMinus newRightMinus, NotificationChain msgs)
  {
    AssertionMinus oldRightMinus = rightMinus;
    rightMinus = newRightMinus;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_MINUS__RIGHT_MINUS, oldRightMinus, newRightMinus);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightMinus(AssertionMinus newRightMinus)
  {
    if (newRightMinus != rightMinus)
    {
      NotificationChain msgs = null;
      if (rightMinus != null)
        msgs = ((InternalEObject)rightMinus).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_MINUS__RIGHT_MINUS, null, msgs);
      if (newRightMinus != null)
        msgs = ((InternalEObject)newRightMinus).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatalogPackage.STMT_MINUS__RIGHT_MINUS, null, msgs);
      msgs = basicSetRightMinus(newRightMinus, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatalogPackage.STMT_MINUS__RIGHT_MINUS, newRightMinus, newRightMinus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_MINUS__LEFT:
        return basicSetLeft(null, msgs);
      case DatalogPackage.STMT_MINUS__RIGHT_MINUS:
        return basicSetRightMinus(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_MINUS__MINUS:
        return getMinus();
      case DatalogPackage.STMT_MINUS__LEFT:
        return getLeft();
      case DatalogPackage.STMT_MINUS__RIGHT_MINUS:
        return getRightMinus();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_MINUS__MINUS:
        setMinus((String)newValue);
        return;
      case DatalogPackage.STMT_MINUS__LEFT:
        setLeft((StmtMinus)newValue);
        return;
      case DatalogPackage.STMT_MINUS__RIGHT_MINUS:
        setRightMinus((AssertionMinus)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_MINUS__MINUS:
        setMinus(MINUS_EDEFAULT);
        return;
      case DatalogPackage.STMT_MINUS__LEFT:
        setLeft((StmtMinus)null);
        return;
      case DatalogPackage.STMT_MINUS__RIGHT_MINUS:
        setRightMinus((AssertionMinus)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatalogPackage.STMT_MINUS__MINUS:
        return MINUS_EDEFAULT == null ? minus != null : !MINUS_EDEFAULT.equals(minus);
      case DatalogPackage.STMT_MINUS__LEFT:
        return left != null;
      case DatalogPackage.STMT_MINUS__RIGHT_MINUS:
        return rightMinus != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (minus: ");
    result.append(minus);
    result.append(')');
    return result.toString();
  }

} //StmtMinusImpl
