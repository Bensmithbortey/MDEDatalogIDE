/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mde.generator;

import com.google.common.collect.Iterators;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.mde.datalog.Assertion;
import org.xtext.mde.datalog.Conditions;
import org.xtext.mde.datalog.Model;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DatalogGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    final Model model = ((Model) _head);
    fsa.generateFile(this.deriveTargetFileNameFor(model, resource), this.generate(model));
  }
  
  public CharSequence generate(final Model model) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Model contains:");
    _builder.newLine();
    _builder.newLine();
    _builder.append("- ");
    int _size = IteratorExtensions.size(Iterators.<Conditions>filter(model.eAllContents(), Conditions.class));
    _builder.append(_size);
    _builder.append(" Conditions");
    _builder.newLineIfNotEmpty();
    _builder.append("- ");
    int _size_1 = IteratorExtensions.size(Iterators.<Assertion>filter(model.eAllContents(), Assertion.class));
    _builder.append(_size_1);
    _builder.append(" Assertions");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public String deriveTargetFileNameFor(final Model test, final Resource resource) {
    return resource.getURI().appendFileExtension("txt").lastSegment();
  }
}
